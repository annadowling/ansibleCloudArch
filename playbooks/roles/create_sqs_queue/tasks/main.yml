# Create sqs queue and event trigger for lambda
---
- name: Create SQS Queue
  sqs_queue:
    region: "{{ region }}"
    aws_access_key: "{{ access_key_id }}"
    aws_secret_key: "{{ secret_access_key }}"
    name: "{{ queue_name }}"
    default_visibility_timeout: 30
    message_retention_period: 86400
    maximum_message_size: 1024
    delivery_delay: 0
    receive_message_wait_time: 0
  register: sqs_queue

- name: Print output of retrieved queue ARN
  debug:
    msg: "Retrieved Queue ARN: {{ sqs_queue.queue_arn }}"

- name: Create SQS Event Trigger for Receive votes Lambda
  lambda_event:
    region: "{{ region }}"
    aws_access_key: "{{ access_key_id }}"
    aws_secret_key: "{{ secret_access_key }}"
    state: present
    event_source: sqs
    lambda_function_arn: "{{ receive_lambda_function }}"
    alias: Dev
    source_params:
      source_arn: "{{ sqs_queue.queue_arn }}"
      enabled: True
      batch_size: 10
